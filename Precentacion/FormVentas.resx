<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="EPErrorIcono.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="TTMensaje.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 17</value>
  </metadata>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBTitulo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>