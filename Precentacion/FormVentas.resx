<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="EPErrorIcono.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="TTMensaje.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 17</value>
  </metadata>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBTitulo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACMwAAAjMAdb8T/YAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAU8UlEQVR4Xu2dCZQV5ZXH6X3vpleahqY3bOgGGmigQRpZpaVbdgRHFlE2ZVEggqCoAYRERTFiHJkR
        RUeMGyZHY2aOepxMMokxGR1mokFNYibEqEkmmkl0Molk5s695evHV9/71/JeV1V3Y91zfke8VfXd++6/
        +tX21X19iOgzAVsZs4p5mPkm8xbzUQT5t/hkmaxTisY4G4HOswW2lIig32X+lxGnG2Tdf2ZWMslo7LMF
        6DwbYOtgXmdUYRPhh0w7inE2AJ29GbYc5jijiugFMmYOitmbgc7eCtsg5t8YVTid15h7mRuZNRHk3+Jz
        +saQsQeh2L0V6OyNsDUyv2ZUwTr5gNnB1KBtVdjqmOuZDxl9HEFiNKJteyPQ2dtgK2J+yqhCCX9hDjBy
        BSDCTmNWMCPROCpshcztjIyhjyuxitB2vQ3o7E2wpTLfZlSBhE+YN5j3mP+L+FTuQePpsLUxv4tso/KP
        TCrapjcBnT0JNrmUk2P7JGYZcx0jx+u/Z+SY/WdGFcYt8pddiWLqsNUzsiPpY+xC6/cmoDNI2HIZOX63
        M1cwX2COMfJXfYpBX8Fe0YZyQrCNZ/4U2a6TPzC9+qYRdHoJWzEjxVvMbGMOMU8zJxg5OVMLGjRrUM5W
        sK1Wtu3kbrRubwE6vYAtiZETsES/ohMiKS2T0svqKKd+MvUdfwmVztpGFZfcSVXrn6D04mp9/b0odyvY
        5DP9S2TbTuRcowSt3xuATi9ga44UyDuSkig1vx9lVTVT/sg5VDz1SipfcDNVXv4A1X7uORpy8+vUePA9
        S3KHTtXHfMgidzmxlJ33OeZBZi3TwMgOIFcS+jiXoXF6A9DpBWxSNLVIjiSnZ1NGv3MMoQonLKOy9mtp
        wNK7qGrDcRq863vUcOAUFNYtMqYW85sWue9W1lH5LSOHr18pPuFraJzeAHR6AdtspUAGxl9v9RjKHzWX
        iqdtoPKF+6ly9YNUe80LNGTfSSial8gOpeX0tkXu7yvruEEOA/OZQjReTwY6vYBtBKMWiYV+HgoTFPJt
        ouUk5ydJWt5yw0hfzy1yv0FuNR9mljPV6tg9Eej0ArYCRi0OVa46CoUJCjmU6DkxFVrelyrLDJKSzP8f
        J79kHmeuYkYzKWq87gY6vYLt90y0GOUL9kFhgkLOI9R8IkzQcv5bZRmV1qXS9T8opeWH+9LkddlUNSaN
        UtOTossTQO4dPM/cxExnuvUJI3R6BZt8HUY/fPG09VCYoJCTyD5JydF8IizRcj6pLKOxS7Lo5jfLTHz+
        h6W09iuF1HZNLg2ZmkFZ+V3aIU4zcml5J7OIKVfz8Rvo9Aq2Z5noh5VLNyRMkMiJqJoTs03JV25amZ4b
        LLwlP2YH0Nn7Rhld9WwRzd2TRyPnZlLfASnR7RPkZWaIWku/gE6vYPvryAcykOt3JEqQZFWNieYTIXon
        j22u4jfY+nxxVOjrXi4xCW/H9m+V0JKD+TR+WRb1b0ilpGTzuC44qdbSL6DTK9h2Kh/I+OtDogSJXIKq
        OTFPK/nepvgpu28ydezKo2FtGZRT/OmhQ77uL72vLxTdjhteKaWVR/rS1PU5VNOSTmmZjoeNmCsUP4BO
        r2BbGvkwn5KU1OWbOV1FzkNMOfXpcyKSazoj8//05THk8s4g5wFIaLfsfr2Mrni8kGbtyKWG8zMoPTtm
        h/iJXk8/gE6vYGtVPpDB4F0vQWGCQq5EtJz+yMiUcPmvvsySNccKobCJUjY4VY9xFNXUa6DTK9gqlQ9k
        ULXhSSiM38idRrnrmDdilimfRDl/Sw4UMhGu/34JutewGtXUa6DTK9hkModc5kQ/WMUlX4ICeU397hM0
        8NLDVNh6GWX0bzAOP2oebknm7YYXlFNFVr7JP3hSOhQzEZYfLjCNHaH3XwUIbDKpI/rB5PEsEqyryKGl
        4q/upL4tF6PHvq5JT06hluJK2jxkEj02aTn9x7zr6IOL9tC2himm9TJykmjPj7Cg8XLe2mzT2MxvUC39
        ADq9hM00X0+e0SMB4+KOd6lu+4vGwyQ5qwfX9q7JTk2nKWW1tLNxGj0z5XJ6d8ENhuA6X528Mmbb9U8V
        QUHjZVBzmj52YE8XobOrsMn19AuMzKM3Ta+WiRpQVBsabv8F1Wx+lvrNuZHyhs2klCz4lemKwvQsmlUx
        hPY0tdEL09fRrxd9Hgqu8878XZSq3UVs35kLBY0HuZoAt5bfZaR2nUgt56JadxXo7ApskxnLeXzppbVQ
        ZIQcx+WkTeYJoLHc0J+P3QsrR9CB0bPpO20b6bcX7YYCu6G5aIBp7MaZGVDUeJBbyuqYNkhNJ6OadwXo
        TBQ2mUljuv+vI1O2kNiIVD75QmPYUZtbTMuqm+mecQvo1fYtUMhE2VTfaoqVXZhs3AZGwrpFnieoYzog
        tfV0Kjp0Jgrb1kiitgzZ+xoUXKV+z7/DbVU6z9DXDB5PD0xYQm/M3g6F84pHWpfG5HD1N7p2HiAPk/Qx
        HdiKap8o0JkIbOWM6fFvVkYqtTTGnqDVbP0HKLpKw60/o6QU88lRGp+hj4ucoT/auox+FjlDD4q35+6k
        pD7m47U8AELCukG+PbIKzOcVVeX5NK15YBSpobqckRp79sQQOhOBTebyq4nSgsm1tH/dBJNPGHjZESi6
        Tnb1WNN2Fw5ogMIESWOBeYdump0JxXWDPEFUxxLWzGmk2ze2RpEa6uswx5AGiQCd8cImJ35qglRRkkO3
        bZhofAh9Ly6fz4UEguuUTN9o2q44IxuKEiSr61pMORX0T4HiumHe3jzTWHI3cN/aCaYdQGootVTXi+DJ
        CSF0xgObnPiZHqIkMZsWNUU/hP4Biqesg4LrDFr7sGk74Xttm6AwQXFk/OKYnK558cwj43gYNS/TNE7/
        4hyT+J1ILaWm6rqM1LzLJ4TQGQ9sWyIJRRk7tMz0ARqrzV91+U0dUHCdoV94M2YGz8HmOVCYoDg5e5sp
        H2HRrc6TRhCFA80TRyYO72+qm4rUVF03whakSTxAp1vYYk78MtNTaPeqFlPyrSP6R5cLWZUjoeCIzAHD
        TNsuHtQEhQmSmlzzDj1mcey0MSeu/XaJaQxhWVu9qW4qUlOprbZNl08IodMtbNJVS02I5p9XG5P8heea
        782n5pZAsRFF560ybTswuwCKEiRLq0ebciqpif884OIvxd7NvGHl2JjaqUht9W2Yh5E2boFON7AtVJKI
        m+TMPCbfmfSsmG1zUzMoPy2z28jSLk+FjNwkysxzT0paYk8nLViINHIDdLqB7R0lgZDu5R2kkRug0w1s
        puf8Id3KaaSRG6DTDWx+Nm4IiY+/II3cAJ1OsGUowQ3Wt1fR/ZuaQgJAaq3Xn8lAWjkBnU6wlSiBDb6+
        axydfqojJACk1nr9mYSaVECnE2w1SmCDf9p3Lkw2xHuk1nr9GcceiAjodIKtSQls8K8Hz4PJhniP1Fqv
        P9OEtHICOp1gi5nv/5N7p8Jk/eL3X7mAvnvLRHr7b6bB5UEgsSUHyQUt9wuptV5/phVp5QR0OsE2Swls
        8P7R82GyXvP09WNpVE0+pSSfuZHSr28Gbbqwmn73iP9CSIyNHdVGzM74kovkJLmhbbxGat0ZW2EW0soJ
        6HSCbYkS2ODjx2bBZL3iT0+208rpA00xdarLsukHB1rh9l7wEv+1V5XG3plUkRwlV7S9V0itQWzTa+5u
        gU4n2Ez98tJSkmCiXvLFFUOj8eyoK8/25Sv5v3jMqjJ78TuRXNEYXiI11+Im9CYRdDrBZnoEXJSbBpP0
        ije+PIUy0mIaO1iyZU4NHKcrbOYxUSyE5Co5o3G8QmquxU3o0TB0OsEm/fWjweUvAyXpFQdXNUZjddLS
        0I8+d/EoWjxtMOVnp5uWDSrxPh8ZU40hMSW25CC5qMsEyRmN4xXg2+hGpJUT0OkEm+k9+uFVeTBJr1g+
        xTwfv7ggkw4oj0kXTol9TPrL+2fAsRJBxtLHl5id8SUXyUldLjmjsbxCaq7GY25DWjkBnU6wSbfuaPBz
        hxTCJL2ibVRpNJYwrKaINi4YYcySkWfkV8wbblouvHrHJDhWIshY+virLmykmeMqqbm+1MhFclKXS85o
        LK+QmqvxmHuRVk5ApxNsphnAfn/Y7QvqorEEuexKVi8DC81vDmXyMfiPT3h3Ji5jyZhqjPycM4cdyUW9
        LBUkZzSWV+h/FExCM4Wh0wm2Z5TAtOjccpikVzy+vTkayw0Th3r/jSRjolhWSM5oHK+Qmmsxn0FaOQGd
        TrBJR41ocLn2RUl6hVxXj6/vG41nh7wt5MdziRf3TnDdMFJy9fteALgnAvseOwGdTrC9ogQ27sKhJL3k
        5N1TKDfTuf3atvm1cHsvuHq286Wg5Ci5ou29RGquxX4FaeUEdDrBJj+1Gg1+/UWDYZJe89Y9U2nysNi3
        aYSC7FS6b2MT3M5LDl85gvKzYl7XMpDcJEe0nddIzbX4byGtnIBOJ9hMv58TxJ2vTj453kHrLhgUjS3k
        s/jveHjZ58QvjswwYqo5SE6SG1rfD8Cd0feQVk5ApxNs8oPL0eBfXjccJukXd1zeEI0tyIMZtJ6fqA+D
        BMkJrecXUnM1PvMR0soJ6LSDLZkxtVN9cPNImKRfhDtAh1FzNT4jmsT9Q9fQaQdbfiRglKd2jIFJ+kW4
        A3QYNVfjR8hHmtkBnXawDVACGjy/ezxM0i/CHaDDqLkaP8IApJkd0GkH21AloMHLt/n3DB4R7gAdRs3V
        +BGGIs3sgE472MYpAQ1+FMB1r0q4A3QYNVfjRxiHNLMDOu1gk1+5UIPSqfumwyT9ItwBOoyaq/EjTEea
        2QGddrDNUwIafHisDSbpF3evNb8y7veEFIQ+IUNyQuv5hdRcjR9hHtLMDui0g01+DSsaVO6PB3kDRHhC
        ezgkOfz34/7OSVSRWPpzAckJresXUnPwbGI50swO6LSDbYMS0Lj3jRL0k+98cWI0fidBTg+XWHp8yQmt
        6yfg2cgGpJkd0GkH2w4lIPUvDP74iwQI8tU09GpWd7yfILXX8tiBNLMDOu1g26cEpPqKHJicn/z5eDuV
        5pvnAa5tGwTX9QOJpcaWXCQntK6fSO3VPJh9SDM7oNMOtruUgDSmrgAm5zf68/CKosxARJAYEkuN7fd8
        CCuk9moezF1IMzug0w62B5SANHV4MUzOb9Ct0Puv8v9xsLyerccN+lZ4J1J7LZcHkGZ2QKcdbE8qAWnO
        uH4wOb/5w6MXUKF2KVZZkkkf+fiGkowtMdSYkoPkgtb3G6m9mgvzJNLMDui0g01+Uz8adOnkCphcENx6
        aezbQlvnev9SSCcyth5PckDrBoHUXsvnOaSZHdBpB9tLSkBjIgRKLgjkHTn9hQ3h6NXeP56WMfU4Etvv
        dyLt0CfGMC8hzeyATjvYTL8H4OccPDc8vHVUNJdO5NUsL4/LMhZ6NU1io/WDQmqv5fQa0swO6LSD7edK
        QNpzST1MLkiunBXbM0fuku1d2vXcZAxwx82IidYPEqm9ltfPkWZ2QKcdbB8oAX1/B84N//NEO00fEXNG
        bDCpoch4rRttZ4fc2WttwO8CSCyJibYLEvDO5AdIMzug0w62T5SAgczEdcNvHppJLefgdwfkL3heSz/j
        K/s//24m3F6QZQ9tHkWzx8LGzAYSQ2Kh7YNGaq/l9wnSzA7otIItpj3co9eMhsl1B3KZtmyy+UVSndSU
        JBpZk0/tzaV0+YxKA/m3+GQZ2qYTGdvPy8x4kdqDPONqFwedVrCVKoEMnr2h57WHk0uz7Iwu/4Z/FBmr
        Oy/3rJDag3xLkXZWQKcVbLVKIINv7e+Z7eFkwsTqmZUxL23Gg3wjyH1/eQ8AxehupPYg71qknRXQaQXb
        SCWQwYke3h5Opk5du6AOPTixZOjAXNq5qI7eDOgtn0SR2oP8RyLtrIBOK9gmKYEMfnpv97Vpi5fXD02m
        Q2uGGTvEiqkDaEZTiYH8W3yyTNZB2/ZEpPa6HswkpJ0V0GkFW7sSyOBXDwbTHi4kFqm9rgfTjrSzAjqt
        YItpDxfkVKwQM1J7XQ8mrnZx0GkFm6k9XHpqMkwsJDhEA1UTJq52cdBpBZvpp2GL89JhUiHBIRqomjBx
        /bQsdFrBdpMSyOjMiZIKCQ7RQNWEuQlpZwV0WsF2QAlEI3xuDxfijGigasIcQNpZAZ1WsB1WAvnSjCkk
        PkDzqsNIOyug0wq2R5RAdMFof9vDhTgjGqiaMI8g7ayATivYTO3hLprYHyYVEhyigaoJE1e7OOi0gs3U
        Hu6ybpoOHXIG0UDVhImrXRx0WsH2qhKIrgqgPVyIPaKBqgnzKtLOCui0gu3HSiDatTiY9nAh1ogGqibM
        j5F2VkCnFWzvK4Holh74jPyzhmigasK8j7SzAjqtYPtYCUT3BNweLiQW0UDVhPkYaWcFdCLYpD2cGsiY
        P4eSCgkO0UDXhXHdLg46EWwx7eG+urN73okLOYNooOvCuG4XB50Itpj2cC/sCbY9XEgsooGuC+O6XRx0
        ItgalAAG3w+4PVxILKKBrgvTgDREQCeCrUUJYBBEW/QQe0QDXRemBWmIgE4E2wwlgEFPnS37WUI00HVh
        ZiANEdCJYJuvBDAI4qdaQ+wRDXRdmPlIQwR0IthWKAGM162Cbg8XEotFu7gVSEMEdCLYTO3h8rJSYUIh
        wSNaqNowrtvFQSeCzdQeTholoWRCgkdvWsW4bhcHnQi2/UoAGjIgFyYTEjyihaoNsx9piIBOBNshJQCN
        Hdw97eFCYhEtVG2YQ0hDBHQi2I4qAWjaiO5pDxcSi2ihasMcRRoioBPBdlwJQHNbuqc9XEgsooWqDXMc
        aYiATgSbqT2cNEtAyYQED2iK4bpdHHQi2Ezt4a7oxvZwIWZEC1UbxnW7OOhEsJnaw/n969gh7tF/XZ1x
        3S4OOhFsp5QAnrRgC/EG0ULVhjmFNERAJ4LtQyUA3dkD2sOFfIpooWrDfIg0REAngu20EoCO9JD2cCEd
        hhaqNsxppCECOnXYMpXBDR7bFuxv5IRYI1ro+jCZSEsd6NRhi2kP940be157uM8qooWuD+OqXRx06rDF
        tIe76eJz6NjWUSE9ANFC14dx1S4OOnXYYtrDhfR4XLWLg04dtgnKwCG9gwlISx3o1GGTHsGmy8CQHo1o
        5apnMHQi2GRO4AlGDRTS8xCNXM4JpD7/D19RPaQHik/mAAAAAElFTkSuQmCC
</value>
  </data>
</root>